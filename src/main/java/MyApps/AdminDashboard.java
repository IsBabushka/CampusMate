/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyApps;

/**
 *
 * @author allen
 */
import MyLibs.*;
import org.jfree.chart.*;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.awt.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Map;



public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        try {
            initializeDashboard();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // constructor which takes a user as a parameter
    public AdminDashboard(User user) {
        initComponents();
        Manager manager = Manager.getInstance();
        manager.setCurrentUser(user); // Set the current user
        try {
            initializeDashboard();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void initializeDashboard() throws SQLException {
        // fullname text becomes current user's fullname

        // total students gets updated
        // total teachers gets updated
        // attdc. rates gets updated

        Manager manager = Manager.getInstance();
        User user = manager.getCurrentUser();
        if (user != null) { // Check if user is not null
            fullnameText.setText(user.getName());
        } else {
            JOptionPane.showMessageDialog(this, "Error: User not found.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        

        populateFields();
        populateChartsAndTables();
        
    }
    


    private void populateFields() throws SQLException {
        UserDAO userDAO = new UserDAO();
        StudentSessionDAO studentSessionDAO = new StudentSessionDAO();
        

        // get total number of students
        int totalStudents = userDAO.countTotalStudents();
        totalStudentsCount.setText(String.valueOf(totalStudents));

        // get total number of teachers
        int totalTeachers = userDAO.countTotalTeachers();
        totalTeachersCount.setText(String.valueOf(totalTeachers));

        // get attendance rates
        double attendanceRate = studentSessionDAO.getOverallAttendanceRate() * 100;
        attendanceRatesCount.setText(String.format("%.1f%%", attendanceRate));
    }

    private void populateChartsAndTables() {
        // Create and display the attendance rate chart
        createAttendanceRateChart();

        // Create and display grade distrib chart
        createGradeDistributionChart();

        // Create/Update Manage Students table
        updateManageStudentsTable();    

        // Create/Update manage Teachers table
        updateManageTeachersTable();

        // 
        updateManageCoursesTable();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        CampusMateLogo = new javax.swing.JLabel();
        dashboardPanel = new javax.swing.JPanel();
        dashboardText = new javax.swing.JLabel();
        dashboardIcon = new javax.swing.JLabel();
        manageStudentsPanel = new javax.swing.JPanel();
        manageStudentsText = new javax.swing.JLabel();
        manageStudentsIcon = new javax.swing.JLabel();
        manageTeachersPanel = new javax.swing.JPanel();
        manageTeachersText = new javax.swing.JLabel();
        manageTeachersIcon = new javax.swing.JLabel();
        assignCoursesPanel = new javax.swing.JPanel();
        assignCoursesText = new javax.swing.JLabel();
        assignCoursesIcon = new javax.swing.JLabel();
        signOutPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        headerPanel1 = new javax.swing.JPanel();
        headerText = new javax.swing.JLabel();
        fullnameText = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        headerDivider = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        dashboardTab = new javax.swing.JPanel();
        totalStudentsPanel = new javax.swing.JPanel();
        totalStudentsHeader = new javax.swing.JLabel();
        totalStudentsCount = new javax.swing.JLabel();
        totalTeachersPanel = new javax.swing.JPanel();
        totalTeachersCount = new javax.swing.JLabel();
        totalTeachersHeader = new javax.swing.JLabel();
        attendanceRatesPanel = new javax.swing.JPanel();
        attendanceRatesHeader = new javax.swing.JLabel();
        attendanceRatesCount = new javax.swing.JLabel();
        attendanceRatesChartPanel = new javax.swing.JPanel();
        attendanceRatesChartHeader = new javax.swing.JLabel();
        attendanceRatesChart = new javax.swing.JPanel();
        gradeDistributionChartPanel = new javax.swing.JPanel();
        gradeDistributionChartHeader = new javax.swing.JLabel();
        gradeDistributionChart = new javax.swing.JPanel();
        manageStudentsTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageStudentsTable = new javax.swing.JTable();
        addAStudentButton_ManageStudents = new javax.swing.JPanel();
        addAStudentText_ManageStudents = new javax.swing.JLabel();
        exportStudentDataAsCSVButton_ManageStudents = new javax.swing.JPanel();
        exportStudentDataAsCSVText_ManageStudents = new javax.swing.JLabel();
        generateStudentReportButton_ManageStudents = new javax.swing.JPanel();
        generateStudentReportText_ManageStudents = new javax.swing.JLabel();
        editAStudentButton_ManageStudents = new javax.swing.JPanel();
        editAStudentText_ManageStudents = new javax.swing.JLabel();
        removeAStudentButton_ManageStudents = new javax.swing.JPanel();
        removeAStudentText_ManageStudents = new javax.swing.JLabel();
        manageTeachersTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        manageStudentsTable2 = new javax.swing.JTable();
        addATeacherButton_ManageTeacher = new javax.swing.JPanel();
        addATeacherText_ManageTeacher = new javax.swing.JLabel();
        exportTeacherDataAsCSVButton_ManageTeacher = new javax.swing.JPanel();
        exportTeacherDataAsCSVText_ManageTeacher = new javax.swing.JLabel();
        generateTeacherReportButton_ManageTeacher = new javax.swing.JPanel();
        generateTeacherReportText_ManageTeacher = new javax.swing.JLabel();
        editATeacherButton_ManageTeacher = new javax.swing.JPanel();
        editATeacherText_ManageTeacher = new javax.swing.JLabel();
        removeATeacherButton_ManageTeacher = new javax.swing.JPanel();
        removeATeacherText_ManageTeacher = new javax.swing.JLabel();
        assignCourses = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        manageCoursesTable = new javax.swing.JTable();
        addACourseButton = new javax.swing.JPanel();
        addACourseText = new javax.swing.JLabel();
        generateCourseReportButton = new javax.swing.JPanel();
        generateCourseReportText = new javax.swing.JLabel();
        editACourserButton = new javax.swing.JPanel();
        editACourseText = new javax.swing.JLabel();
        removeACourseButton = new javax.swing.JPanel();
        removeACourseText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1200, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(35, 35, 35));
        jPanel2.setMaximumSize(new java.awt.Dimension(230, 800));
        jPanel2.setMinimumSize(new java.awt.Dimension(230, 800));
        jPanel2.setPreferredSize(new java.awt.Dimension(230, 800));

        CampusMateLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img02_dashboard_logo.png"))); // NOI18N

        dashboardPanel.setBackground(new java.awt.Color(67, 67, 67));
        dashboardPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dashboardPanelMouseReleased(evt);
            }
        });

        dashboardText.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        dashboardText.setForeground(new java.awt.Color(219, 219, 219));
        dashboardText.setText("Dashboard");

        dashboardIcon.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        dashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img03_dashboard_selected.png"))); // NOI18N

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dashboardIcon)
                .addGap(18, 18, 18)
                .addComponent(dashboardText)
                .addGap(82, 82, 82))
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dashboardIcon)
                    .addComponent(dashboardText))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        manageStudentsPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageStudentsPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manageStudentsPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                manageStudentsPanelMouseReleased(evt);
            }
        });
        manageStudentsPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                manageStudentsPanelKeyReleased(evt);
            }
        });

        manageStudentsText.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        manageStudentsText.setForeground(new java.awt.Color(112, 110, 110));
        manageStudentsText.setText("Manage Students");

        manageStudentsIcon.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        manageStudentsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img06_manageStudents_unselected.png"))); // NOI18N

        javax.swing.GroupLayout manageStudentsPanelLayout = new javax.swing.GroupLayout(manageStudentsPanel);
        manageStudentsPanel.setLayout(manageStudentsPanelLayout);
        manageStudentsPanelLayout.setHorizontalGroup(
            manageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageStudentsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manageStudentsIcon)
                .addGap(18, 18, 18)
                .addComponent(manageStudentsText)
                .addGap(28, 28, 28))
        );
        manageStudentsPanelLayout.setVerticalGroup(
            manageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageStudentsPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(manageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageStudentsText)
                    .addComponent(manageStudentsIcon))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        manageTeachersPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageTeachersPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manageTeachersPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                manageTeachersPanelMouseReleased(evt);
            }
        });

        manageTeachersText.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        manageTeachersText.setForeground(new java.awt.Color(112, 110, 110));
        manageTeachersText.setText("Manage Teachers");

        manageTeachersIcon.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        manageTeachersIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img08_manageTeachers_unselected.png"))); // NOI18N

        javax.swing.GroupLayout manageTeachersPanelLayout = new javax.swing.GroupLayout(manageTeachersPanel);
        manageTeachersPanel.setLayout(manageTeachersPanelLayout);
        manageTeachersPanelLayout.setHorizontalGroup(
            manageTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageTeachersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manageTeachersIcon)
                .addGap(21, 21, 21)
                .addComponent(manageTeachersText)
                .addGap(25, 25, 25))
        );
        manageTeachersPanelLayout.setVerticalGroup(
            manageTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTeachersPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(manageTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageTeachersText)
                    .addComponent(manageTeachersIcon))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        assignCoursesPanel.setBackground(new java.awt.Color(35, 35, 35));
        assignCoursesPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        assignCoursesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                assignCoursesPanelMouseReleased(evt);
            }
        });

        assignCoursesText.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        assignCoursesText.setForeground(new java.awt.Color(112, 110, 110));
        assignCoursesText.setText("Manage Courses");

        assignCoursesIcon.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        assignCoursesIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img10_assignCourses_unselected.png"))); // NOI18N

        javax.swing.GroupLayout assignCoursesPanelLayout = new javax.swing.GroupLayout(assignCoursesPanel);
        assignCoursesPanel.setLayout(assignCoursesPanelLayout);
        assignCoursesPanelLayout.setHorizontalGroup(
            assignCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, assignCoursesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(assignCoursesIcon)
                .addGap(21, 21, 21)
                .addComponent(assignCoursesText)
                .addGap(31, 31, 31))
        );
        assignCoursesPanelLayout.setVerticalGroup(
            assignCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignCoursesPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(assignCoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(assignCoursesIcon)
                    .addComponent(assignCoursesText))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        signOutPanel.setBackground(new java.awt.Color(49, 49, 49));
        signOutPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signOutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                signOutPanelMouseReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(219, 219, 219));
        jLabel9.setText("Sign Out");

        javax.swing.GroupLayout signOutPanelLayout = new javax.swing.GroupLayout(signOutPanel);
        signOutPanel.setLayout(signOutPanelLayout);
        signOutPanelLayout.setHorizontalGroup(
            signOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signOutPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel9)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        signOutPanelLayout.setVerticalGroup(
            signOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(CampusMateLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(manageStudentsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(manageTeachersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(assignCoursesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(signOutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(CampusMateLogo)
                .addGap(67, 67, 67)
                .addComponent(dashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manageStudentsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manageTeachersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assignCoursesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                .addComponent(signOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 765));

        headerPanel1.setBackground(new java.awt.Color(255, 255, 255));

        headerText.setBackground(new java.awt.Color(67, 67, 67));
        headerText.setFont(new java.awt.Font("Helvetica", 1, 36)); // NOI18N
        headerText.setForeground(new java.awt.Color(67, 67, 67));
        headerText.setText("Dashboard");

        fullnameText.setBackground(new java.awt.Color(67, 67, 67));
        fullnameText.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        fullnameText.setForeground(new java.awt.Color(67, 67, 67));
        fullnameText.setText("Fullname");

        jLabel3.setBackground(new java.awt.Color(67, 67, 67));
        jLabel3.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(67, 67, 67));
        jLabel3.setText("Admin");

        headerDivider.setBackground(new java.awt.Color(112, 110, 110));
        headerDivider.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout headerDividerLayout = new javax.swing.GroupLayout(headerDivider);
        headerDivider.setLayout(headerDividerLayout);
        headerDividerLayout.setHorizontalGroup(
            headerDividerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 933, Short.MAX_VALUE)
        );
        headerDividerLayout.setVerticalGroup(
            headerDividerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout headerPanel1Layout = new javax.swing.GroupLayout(headerPanel1);
        headerPanel1.setLayout(headerPanel1Layout);
        headerPanel1Layout.setHorizontalGroup(
            headerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(headerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(headerPanel1Layout.createSequentialGroup()
                        .addComponent(headerText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(headerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fullnameText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(headerDivider, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        headerPanel1Layout.setVerticalGroup(
            headerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(headerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanel1Layout.createSequentialGroup()
                        .addComponent(fullnameText)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addComponent(headerText))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(headerDivider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(headerPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 990, -1));

        dashboardTab.setBackground(new java.awt.Color(255, 255, 255));

        totalStudentsPanel.setBackground(new java.awt.Color(221, 216, 239));
        totalStudentsPanel.setPreferredSize(new java.awt.Dimension(270, 103));

        totalStudentsHeader.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        totalStudentsHeader.setForeground(new java.awt.Color(67, 67, 67));
        totalStudentsHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalStudentsHeader.setText("Total Students");

        totalStudentsCount.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        totalStudentsCount.setForeground(new java.awt.Color(67, 67, 67));
        totalStudentsCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalStudentsCount.setText("0");

        javax.swing.GroupLayout totalStudentsPanelLayout = new javax.swing.GroupLayout(totalStudentsPanel);
        totalStudentsPanel.setLayout(totalStudentsPanelLayout);
        totalStudentsPanelLayout.setHorizontalGroup(
            totalStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalStudentsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(totalStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalStudentsHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(totalStudentsCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        totalStudentsPanelLayout.setVerticalGroup(
            totalStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalStudentsPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(totalStudentsHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalStudentsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        totalTeachersPanel.setBackground(new java.awt.Color(225, 216, 227));
        totalTeachersPanel.setPreferredSize(new java.awt.Dimension(270, 103));

        totalTeachersCount.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        totalTeachersCount.setForeground(new java.awt.Color(67, 67, 67));
        totalTeachersCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalTeachersCount.setText("0");

        totalTeachersHeader.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        totalTeachersHeader.setForeground(new java.awt.Color(67, 67, 67));
        totalTeachersHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalTeachersHeader.setText("Total Teachers");

        javax.swing.GroupLayout totalTeachersPanelLayout = new javax.swing.GroupLayout(totalTeachersPanel);
        totalTeachersPanel.setLayout(totalTeachersPanelLayout);
        totalTeachersPanelLayout.setHorizontalGroup(
            totalTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalTeachersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(totalTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalTeachersHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(totalTeachersCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        totalTeachersPanelLayout.setVerticalGroup(
            totalTeachersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalTeachersPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(totalTeachersHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalTeachersCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        attendanceRatesPanel.setBackground(new java.awt.Color(231, 248, 255));

        attendanceRatesHeader.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        attendanceRatesHeader.setForeground(new java.awt.Color(67, 67, 67));
        attendanceRatesHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attendanceRatesHeader.setText("Attendance Rates");

        attendanceRatesCount.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        attendanceRatesCount.setForeground(new java.awt.Color(67, 67, 67));
        attendanceRatesCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attendanceRatesCount.setText("0.0%");

        javax.swing.GroupLayout attendanceRatesPanelLayout = new javax.swing.GroupLayout(attendanceRatesPanel);
        attendanceRatesPanel.setLayout(attendanceRatesPanelLayout);
        attendanceRatesPanelLayout.setHorizontalGroup(
            attendanceRatesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceRatesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(attendanceRatesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceRatesHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(attendanceRatesCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        attendanceRatesPanelLayout.setVerticalGroup(
            attendanceRatesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceRatesPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(attendanceRatesHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attendanceRatesCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        attendanceRatesChartPanel.setBackground(new java.awt.Color(249, 249, 249));

        attendanceRatesChartHeader.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        attendanceRatesChartHeader.setForeground(new java.awt.Color(67, 67, 67));
        attendanceRatesChartHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        attendanceRatesChartHeader.setText("Attendance Rates by Class");

        attendanceRatesChart.setBackground(new java.awt.Color(249, 249, 249));

        javax.swing.GroupLayout attendanceRatesChartLayout = new javax.swing.GroupLayout(attendanceRatesChart);
        attendanceRatesChart.setLayout(attendanceRatesChartLayout);
        attendanceRatesChartLayout.setHorizontalGroup(
            attendanceRatesChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );
        attendanceRatesChartLayout.setVerticalGroup(
            attendanceRatesChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 424, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout attendanceRatesChartPanelLayout = new javax.swing.GroupLayout(attendanceRatesChartPanel);
        attendanceRatesChartPanel.setLayout(attendanceRatesChartPanelLayout);
        attendanceRatesChartPanelLayout.setHorizontalGroup(
            attendanceRatesChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceRatesChartPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(attendanceRatesChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceRatesChartHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attendanceRatesChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        attendanceRatesChartPanelLayout.setVerticalGroup(
            attendanceRatesChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceRatesChartPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(attendanceRatesChartHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(attendanceRatesChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gradeDistributionChartPanel.setBackground(new java.awt.Color(249, 249, 249));

        gradeDistributionChartHeader.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        gradeDistributionChartHeader.setForeground(new java.awt.Color(67, 67, 67));
        gradeDistributionChartHeader.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gradeDistributionChartHeader.setText("Grade Distribution");

        gradeDistributionChart.setBackground(new java.awt.Color(249, 249, 249));

        javax.swing.GroupLayout gradeDistributionChartLayout = new javax.swing.GroupLayout(gradeDistributionChart);
        gradeDistributionChart.setLayout(gradeDistributionChartLayout);
        gradeDistributionChartLayout.setHorizontalGroup(
            gradeDistributionChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 379, Short.MAX_VALUE)
        );
        gradeDistributionChartLayout.setVerticalGroup(
            gradeDistributionChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout gradeDistributionChartPanelLayout = new javax.swing.GroupLayout(gradeDistributionChartPanel);
        gradeDistributionChartPanel.setLayout(gradeDistributionChartPanelLayout);
        gradeDistributionChartPanelLayout.setHorizontalGroup(
            gradeDistributionChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradeDistributionChartPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(gradeDistributionChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gradeDistributionChartHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gradeDistributionChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gradeDistributionChartPanelLayout.setVerticalGroup(
            gradeDistributionChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradeDistributionChartPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(gradeDistributionChartHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gradeDistributionChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dashboardTabLayout = new javax.swing.GroupLayout(dashboardTab);
        dashboardTab.setLayout(dashboardTabLayout);
        dashboardTabLayout.setHorizontalGroup(
            dashboardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardTabLayout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addGroup(dashboardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardTabLayout.createSequentialGroup()
                        .addComponent(totalStudentsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalTeachersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(attendanceRatesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dashboardTabLayout.createSequentialGroup()
                        .addComponent(attendanceRatesChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradeDistributionChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(76, 76, 76))
        );
        dashboardTabLayout.setVerticalGroup(
            dashboardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardTabLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(dashboardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(attendanceRatesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalTeachersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalStudentsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dashboardTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gradeDistributionChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attendanceRatesChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", dashboardTab);

        manageStudentsTab.setBackground(new java.awt.Color(255, 255, 255));

        manageStudentsTable.setBackground(new java.awt.Color(255, 255, 255));
        manageStudentsTable.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        manageStudentsTable.setForeground(new java.awt.Color(0, 0, 0));
        manageStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Name", "Classes", "Date of Birth", "Gender", "Email Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageStudentsTable);

        addAStudentButton_ManageStudents.setBackground(new java.awt.Color(101, 139, 112));
        addAStudentButton_ManageStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAStudentButton_ManageStudents.setPreferredSize(new java.awt.Dimension(296, 58));
        addAStudentButton_ManageStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addAStudentButton_ManageStudentsMouseReleased(evt);
            }
        });

        addAStudentText_ManageStudents.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        addAStudentText_ManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        addAStudentText_ManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addAStudentText_ManageStudents.setText("Add a Student");

        javax.swing.GroupLayout addAStudentButton_ManageStudentsLayout = new javax.swing.GroupLayout(addAStudentButton_ManageStudents);
        addAStudentButton_ManageStudents.setLayout(addAStudentButton_ManageStudentsLayout);
        addAStudentButton_ManageStudentsLayout.setHorizontalGroup(
            addAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAStudentButton_ManageStudentsLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(addAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        addAStudentButton_ManageStudentsLayout.setVerticalGroup(
            addAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        exportStudentDataAsCSVButton_ManageStudents.setBackground(new java.awt.Color(30, 56, 115));
        exportStudentDataAsCSVButton_ManageStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exportStudentDataAsCSVButton_ManageStudents.setPreferredSize(new java.awt.Dimension(296, 58));
        exportStudentDataAsCSVButton_ManageStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exportStudentDataAsCSVButton_ManageStudentsMouseReleased(evt);
            }
        });

        exportStudentDataAsCSVText_ManageStudents.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        exportStudentDataAsCSVText_ManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        exportStudentDataAsCSVText_ManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exportStudentDataAsCSVText_ManageStudents.setText("Export student data as .csv");

        javax.swing.GroupLayout exportStudentDataAsCSVButton_ManageStudentsLayout = new javax.swing.GroupLayout(exportStudentDataAsCSVButton_ManageStudents);
        exportStudentDataAsCSVButton_ManageStudents.setLayout(exportStudentDataAsCSVButton_ManageStudentsLayout);
        exportStudentDataAsCSVButton_ManageStudentsLayout.setHorizontalGroup(
            exportStudentDataAsCSVButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportStudentDataAsCSVButton_ManageStudentsLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(exportStudentDataAsCSVText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        exportStudentDataAsCSVButton_ManageStudentsLayout.setVerticalGroup(
            exportStudentDataAsCSVButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exportStudentDataAsCSVText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        generateStudentReportButton_ManageStudents.setBackground(new java.awt.Color(169, 158, 215));
        generateStudentReportButton_ManageStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generateStudentReportButton_ManageStudents.setPreferredSize(new java.awt.Dimension(296, 58));
        generateStudentReportButton_ManageStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                generateStudentReportButton_ManageStudentsMouseReleased(evt);
            }
        });

        generateStudentReportText_ManageStudents.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        generateStudentReportText_ManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        generateStudentReportText_ManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generateStudentReportText_ManageStudents.setText("Generate Student Report");

        javax.swing.GroupLayout generateStudentReportButton_ManageStudentsLayout = new javax.swing.GroupLayout(generateStudentReportButton_ManageStudents);
        generateStudentReportButton_ManageStudents.setLayout(generateStudentReportButton_ManageStudentsLayout);
        generateStudentReportButton_ManageStudentsLayout.setHorizontalGroup(
            generateStudentReportButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateStudentReportButton_ManageStudentsLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(generateStudentReportText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        generateStudentReportButton_ManageStudentsLayout.setVerticalGroup(
            generateStudentReportButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generateStudentReportText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        editAStudentButton_ManageStudents.setBackground(new java.awt.Color(45, 139, 186));
        editAStudentButton_ManageStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editAStudentButton_ManageStudents.setPreferredSize(new java.awt.Dimension(296, 58));
        editAStudentButton_ManageStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editAStudentButton_ManageStudentsMouseReleased(evt);
            }
        });

        editAStudentText_ManageStudents.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        editAStudentText_ManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        editAStudentText_ManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editAStudentText_ManageStudents.setText("Edit a Student");

        javax.swing.GroupLayout editAStudentButton_ManageStudentsLayout = new javax.swing.GroupLayout(editAStudentButton_ManageStudents);
        editAStudentButton_ManageStudents.setLayout(editAStudentButton_ManageStudentsLayout);
        editAStudentButton_ManageStudentsLayout.setHorizontalGroup(
            editAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editAStudentButton_ManageStudentsLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(editAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        editAStudentButton_ManageStudentsLayout.setVerticalGroup(
            editAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        removeAStudentButton_ManageStudents.setBackground(new java.awt.Color(194, 130, 130));
        removeAStudentButton_ManageStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeAStudentButton_ManageStudents.setPreferredSize(new java.awt.Dimension(296, 58));
        removeAStudentButton_ManageStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeAStudentButton_ManageStudentsMouseReleased(evt);
            }
        });

        removeAStudentText_ManageStudents.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        removeAStudentText_ManageStudents.setForeground(new java.awt.Color(255, 255, 255));
        removeAStudentText_ManageStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeAStudentText_ManageStudents.setText("Remove a Student");

        javax.swing.GroupLayout removeAStudentButton_ManageStudentsLayout = new javax.swing.GroupLayout(removeAStudentButton_ManageStudents);
        removeAStudentButton_ManageStudents.setLayout(removeAStudentButton_ManageStudentsLayout);
        removeAStudentButton_ManageStudentsLayout.setHorizontalGroup(
            removeAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeAStudentButton_ManageStudentsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        removeAStudentButton_ManageStudentsLayout.setVerticalGroup(
            removeAStudentButton_ManageStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(removeAStudentText_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout manageStudentsTabLayout = new javax.swing.GroupLayout(manageStudentsTab);
        manageStudentsTab.setLayout(manageStudentsTabLayout);
        manageStudentsTabLayout.setHorizontalGroup(
            manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageStudentsTabLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addGroup(manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageStudentsTabLayout.createSequentialGroup()
                        .addGroup(manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageStudentsTabLayout.createSequentialGroup()
                                .addComponent(exportStudentDataAsCSVButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(generateStudentReportButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(manageStudentsTabLayout.createSequentialGroup()
                        .addComponent(addAStudentButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editAStudentButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeAStudentButton_ManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addGap(35, 35, 35))))
        );
        manageStudentsTabLayout.setVerticalGroup(
            manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageStudentsTabLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAStudentButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editAStudentButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeAStudentButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(manageStudentsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exportStudentDataAsCSVButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateStudentReportButton_ManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", manageStudentsTab);

        manageTeachersTab.setBackground(new java.awt.Color(255, 255, 255));

        manageStudentsTable2.setBackground(new java.awt.Color(255, 255, 255));
        manageStudentsTable2.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        manageStudentsTable2.setForeground(new java.awt.Color(0, 0, 0));
        manageStudentsTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Teacher ID", "Name", "Department", "Classes", "Date of Birth", "Gender", "Email Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(manageStudentsTable2);

        addATeacherButton_ManageTeacher.setBackground(new java.awt.Color(101, 139, 112));
        addATeacherButton_ManageTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addATeacherButton_ManageTeacher.setPreferredSize(new java.awt.Dimension(296, 58));
        addATeacherButton_ManageTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addATeacherButton_ManageTeacherMouseReleased(evt);
            }
        });

        addATeacherText_ManageTeacher.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        addATeacherText_ManageTeacher.setForeground(new java.awt.Color(255, 255, 255));
        addATeacherText_ManageTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addATeacherText_ManageTeacher.setText("Add a Teacher");

        javax.swing.GroupLayout addATeacherButton_ManageTeacherLayout = new javax.swing.GroupLayout(addATeacherButton_ManageTeacher);
        addATeacherButton_ManageTeacher.setLayout(addATeacherButton_ManageTeacherLayout);
        addATeacherButton_ManageTeacherLayout.setHorizontalGroup(
            addATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addATeacherButton_ManageTeacherLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(addATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        addATeacherButton_ManageTeacherLayout.setVerticalGroup(
            addATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        exportTeacherDataAsCSVButton_ManageTeacher.setBackground(new java.awt.Color(30, 56, 115));
        exportTeacherDataAsCSVButton_ManageTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exportTeacherDataAsCSVButton_ManageTeacher.setPreferredSize(new java.awt.Dimension(296, 58));
        exportTeacherDataAsCSVButton_ManageTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exportTeacherDataAsCSVButton_ManageTeacherMouseReleased(evt);
            }
        });

        exportTeacherDataAsCSVText_ManageTeacher.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        exportTeacherDataAsCSVText_ManageTeacher.setForeground(new java.awt.Color(255, 255, 255));
        exportTeacherDataAsCSVText_ManageTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exportTeacherDataAsCSVText_ManageTeacher.setText("Export teacher data as .csv");

        javax.swing.GroupLayout exportTeacherDataAsCSVButton_ManageTeacherLayout = new javax.swing.GroupLayout(exportTeacherDataAsCSVButton_ManageTeacher);
        exportTeacherDataAsCSVButton_ManageTeacher.setLayout(exportTeacherDataAsCSVButton_ManageTeacherLayout);
        exportTeacherDataAsCSVButton_ManageTeacherLayout.setHorizontalGroup(
            exportTeacherDataAsCSVButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportTeacherDataAsCSVButton_ManageTeacherLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(exportTeacherDataAsCSVText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        exportTeacherDataAsCSVButton_ManageTeacherLayout.setVerticalGroup(
            exportTeacherDataAsCSVButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exportTeacherDataAsCSVText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        generateTeacherReportButton_ManageTeacher.setBackground(new java.awt.Color(169, 158, 215));
        generateTeacherReportButton_ManageTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generateTeacherReportButton_ManageTeacher.setPreferredSize(new java.awt.Dimension(296, 58));
        generateTeacherReportButton_ManageTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                generateTeacherReportButton_ManageTeacherMouseReleased(evt);
            }
        });

        generateTeacherReportText_ManageTeacher.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        generateTeacherReportText_ManageTeacher.setForeground(new java.awt.Color(255, 255, 255));
        generateTeacherReportText_ManageTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generateTeacherReportText_ManageTeacher.setText("Generate Teacher Report");

        javax.swing.GroupLayout generateTeacherReportButton_ManageTeacherLayout = new javax.swing.GroupLayout(generateTeacherReportButton_ManageTeacher);
        generateTeacherReportButton_ManageTeacher.setLayout(generateTeacherReportButton_ManageTeacherLayout);
        generateTeacherReportButton_ManageTeacherLayout.setHorizontalGroup(
            generateTeacherReportButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateTeacherReportButton_ManageTeacherLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(generateTeacherReportText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        generateTeacherReportButton_ManageTeacherLayout.setVerticalGroup(
            generateTeacherReportButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generateTeacherReportText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        editATeacherButton_ManageTeacher.setBackground(new java.awt.Color(45, 139, 186));
        editATeacherButton_ManageTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editATeacherButton_ManageTeacher.setPreferredSize(new java.awt.Dimension(296, 58));
        editATeacherButton_ManageTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editATeacherButton_ManageTeacherMouseReleased(evt);
            }
        });

        editATeacherText_ManageTeacher.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        editATeacherText_ManageTeacher.setForeground(new java.awt.Color(255, 255, 255));
        editATeacherText_ManageTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editATeacherText_ManageTeacher.setText("Edit a Teacher");

        javax.swing.GroupLayout editATeacherButton_ManageTeacherLayout = new javax.swing.GroupLayout(editATeacherButton_ManageTeacher);
        editATeacherButton_ManageTeacher.setLayout(editATeacherButton_ManageTeacherLayout);
        editATeacherButton_ManageTeacherLayout.setHorizontalGroup(
            editATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editATeacherButton_ManageTeacherLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(editATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        editATeacherButton_ManageTeacherLayout.setVerticalGroup(
            editATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        removeATeacherButton_ManageTeacher.setBackground(new java.awt.Color(194, 130, 130));
        removeATeacherButton_ManageTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeATeacherButton_ManageTeacher.setPreferredSize(new java.awt.Dimension(296, 58));
        removeATeacherButton_ManageTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeATeacherButton_ManageTeacherMouseReleased(evt);
            }
        });

        removeATeacherText_ManageTeacher.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        removeATeacherText_ManageTeacher.setForeground(new java.awt.Color(255, 255, 255));
        removeATeacherText_ManageTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeATeacherText_ManageTeacher.setText("Remove a Teacher");

        javax.swing.GroupLayout removeATeacherButton_ManageTeacherLayout = new javax.swing.GroupLayout(removeATeacherButton_ManageTeacher);
        removeATeacherButton_ManageTeacher.setLayout(removeATeacherButton_ManageTeacherLayout);
        removeATeacherButton_ManageTeacherLayout.setHorizontalGroup(
            removeATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeATeacherButton_ManageTeacherLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        removeATeacherButton_ManageTeacherLayout.setVerticalGroup(
            removeATeacherButton_ManageTeacherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(removeATeacherText_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout manageTeachersTabLayout = new javax.swing.GroupLayout(manageTeachersTab);
        manageTeachersTab.setLayout(manageTeachersTabLayout);
        manageTeachersTabLayout.setHorizontalGroup(
            manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTeachersTabLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addGroup(manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageTeachersTabLayout.createSequentialGroup()
                        .addGroup(manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manageTeachersTabLayout.createSequentialGroup()
                                .addComponent(exportTeacherDataAsCSVButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(generateTeacherReportButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(manageTeachersTabLayout.createSequentialGroup()
                        .addComponent(addATeacherButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editATeacherButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeATeacherButton_ManageTeacher, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addGap(35, 35, 35))))
        );
        manageTeachersTabLayout.setVerticalGroup(
            manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageTeachersTabLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addATeacherButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editATeacherButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeATeacherButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(manageTeachersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exportTeacherDataAsCSVButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateTeacherReportButton_ManageTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", manageTeachersTab);

        assignCourses.setBackground(new java.awt.Color(255, 255, 255));

        manageCoursesTable.setBackground(new java.awt.Color(255, 255, 255));
        manageCoursesTable.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        manageCoursesTable.setForeground(new java.awt.Color(0, 0, 0));
        manageCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Code", "Course Title", "Teachers", "Students", "Rooms", "Average Grade", "Attendance Rates"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(manageCoursesTable);

        addACourseButton.setBackground(new java.awt.Color(101, 139, 112));
        addACourseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addACourseButton.setPreferredSize(new java.awt.Dimension(296, 58));
        addACourseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addACourseButtonMouseReleased(evt);
            }
        });

        addACourseText.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        addACourseText.setForeground(new java.awt.Color(255, 255, 255));
        addACourseText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addACourseText.setText("Add a Course");

        javax.swing.GroupLayout addACourseButtonLayout = new javax.swing.GroupLayout(addACourseButton);
        addACourseButton.setLayout(addACourseButtonLayout);
        addACourseButtonLayout.setHorizontalGroup(
            addACourseButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addACourseButtonLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(addACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        addACourseButtonLayout.setVerticalGroup(
            addACourseButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        generateCourseReportButton.setBackground(new java.awt.Color(169, 158, 215));
        generateCourseReportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generateCourseReportButton.setPreferredSize(new java.awt.Dimension(296, 58));
        generateCourseReportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                generateCourseReportButtonMouseReleased(evt);
            }
        });

        generateCourseReportText.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        generateCourseReportText.setForeground(new java.awt.Color(255, 255, 255));
        generateCourseReportText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        generateCourseReportText.setText("Generate Course Report");

        javax.swing.GroupLayout generateCourseReportButtonLayout = new javax.swing.GroupLayout(generateCourseReportButton);
        generateCourseReportButton.setLayout(generateCourseReportButtonLayout);
        generateCourseReportButtonLayout.setHorizontalGroup(
            generateCourseReportButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generateCourseReportButtonLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(generateCourseReportText, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        generateCourseReportButtonLayout.setVerticalGroup(
            generateCourseReportButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(generateCourseReportText, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        editACourserButton.setBackground(new java.awt.Color(45, 139, 186));
        editACourserButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editACourserButton.setPreferredSize(new java.awt.Dimension(296, 58));
        editACourserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editACourserButtonMouseReleased(evt);
            }
        });

        editACourseText.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        editACourseText.setForeground(new java.awt.Color(255, 255, 255));
        editACourseText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editACourseText.setText("Edit a Course");

        javax.swing.GroupLayout editACourserButtonLayout = new javax.swing.GroupLayout(editACourserButton);
        editACourserButton.setLayout(editACourserButtonLayout);
        editACourserButtonLayout.setHorizontalGroup(
            editACourserButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editACourserButtonLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(editACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        editACourserButtonLayout.setVerticalGroup(
            editACourserButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        removeACourseButton.setBackground(new java.awt.Color(194, 130, 130));
        removeACourseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeACourseButton.setPreferredSize(new java.awt.Dimension(296, 58));
        removeACourseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeACourseButtonMouseReleased(evt);
            }
        });

        removeACourseText.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        removeACourseText.setForeground(new java.awt.Color(255, 255, 255));
        removeACourseText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        removeACourseText.setText("Remove a Course");

        javax.swing.GroupLayout removeACourseButtonLayout = new javax.swing.GroupLayout(removeACourseButton);
        removeACourseButton.setLayout(removeACourseButtonLayout);
        removeACourseButtonLayout.setHorizontalGroup(
            removeACourseButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeACourseButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        removeACourseButtonLayout.setVerticalGroup(
            removeACourseButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(removeACourseText, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout assignCoursesLayout = new javax.swing.GroupLayout(assignCourses);
        assignCourses.setLayout(assignCoursesLayout);
        assignCoursesLayout.setHorizontalGroup(
            assignCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignCoursesLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addGroup(assignCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(assignCoursesLayout.createSequentialGroup()
                        .addComponent(generateCourseReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(assignCoursesLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(assignCoursesLayout.createSequentialGroup()
                        .addComponent(addACourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editACourserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(removeACourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addGap(35, 35, 35))))
        );
        assignCoursesLayout.setVerticalGroup(
            assignCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignCoursesLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(assignCoursesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addACourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editACourserButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeACourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generateCourseReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", assignCourses);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1220, 790));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1218, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dashboardPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardPanelMouseReleased
        // TODO add your handling code here:
        // change courseselection icon to img03, others become img06, img08, img10 respectively
        // change bg color of panel to (67,67,67), text to (219,219,219) and panel of others to (35,35,35) and text of others to (112,110,110)
        dashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img03_dashboard_selected.png")));
        dashboardPanel.setBackground(new java.awt.Color(67, 67, 67));
        dashboardText.setForeground(new java.awt.Color(219, 219, 219));

        manageStudentsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img06_manageStudents_unselected.png")));
        manageStudentsPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageStudentsText.setForeground(new java.awt.Color(112, 110, 110));

        manageTeachersIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img08_manageTeachers_unselected.png")));
        manageTeachersPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageTeachersText.setForeground(new java.awt.Color(112, 110, 110));

        assignCoursesIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img10_assignCourses_unselected.png")));
        assignCoursesPanel.setBackground(new java.awt.Color(35, 35, 35));
        assignCoursesText.setForeground(new java.awt.Color(112, 110, 110));
        
        // headertext changes to Dashboard
        headerText.setText("Dashboard");

        // change index of selected tab to 0
        jTabbedPane1.setSelectedIndex(0);

    }//GEN-LAST:event_dashboardPanelMouseReleased

    private void manageStudentsPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manageStudentsPanelKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_manageStudentsPanelKeyReleased

    private void manageTeachersPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageTeachersPanelMouseReleased
        // TODO add your handling code here:
        // change manage teachers icon to img07, others become img04, img06, img10 respectively
        // change bg color of panel to (67,67,67), text to (219,219,219) and panel of others to (35,35,35) and text of others to (112,110,110)
        manageTeachersIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img07_manageTeachers_selected.png")));
        manageTeachersPanel.setBackground(new java.awt.Color(67, 67, 67));
        manageTeachersText.setForeground(new java.awt.Color(219, 219, 219));

        dashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img04_dashboard_unselected.png")));
        dashboardPanel.setBackground(new java.awt.Color(35, 35, 35));
        dashboardText.setForeground(new java.awt.Color(112, 110, 110));

        manageStudentsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img06_manageStudents_unselected.png")));
        manageStudentsPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageStudentsText.setForeground(new java.awt.Color(112, 110, 110));

        assignCoursesIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img10_assignCourses_unselected.png")));
        assignCoursesPanel.setBackground(new java.awt.Color(35, 35, 35));
        assignCoursesText.setForeground(new java.awt.Color(112, 110, 110));
        
        // headertext changes to Manage Teachers
        headerText.setText("Manage Teachers");

        // switch to manage teachers panel
        jTabbedPane1.setSelectedIndex(2);
        
    }//GEN-LAST:event_manageTeachersPanelMouseReleased

    private void assignCoursesPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignCoursesPanelMouseReleased
        // TODO add your handling code here:
        // change assign courses icon to img09, others become img04, img06, img08 respectively
        // change bg color of panel to (67,67,67), text to (219,219,219) and panel of others to (35,35,35) and text of others to (112,110,110)
        assignCoursesIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img09_assignCourses_selected.png")));
        assignCoursesPanel.setBackground(new java.awt.Color(67, 67, 67));
        assignCoursesText.setForeground(new java.awt.Color(219, 219, 219));

        dashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img04_dashboard_unselected.png")));
        dashboardPanel.setBackground(new java.awt.Color(35, 35, 35));
        dashboardText.setForeground(new java.awt.Color(112, 110, 110));

        manageStudentsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img06_manageStudents_unselected.png")));
        manageStudentsPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageStudentsText.setForeground(new java.awt.Color(112, 110, 110));

        manageTeachersIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img08_manageTeachers_unselected.png")));
        manageTeachersPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageTeachersText.setForeground(new java.awt.Color(112, 110, 110));
        
        // headertext changes to Manage Courses
        headerText.setText("Manage Courses");

        // switch to assign courses panel
        jTabbedPane1.setSelectedIndex(3);
        
    }//GEN-LAST:event_assignCoursesPanelMouseReleased

    private void manageStudentsPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageStudentsPanelMouseReleased
        // TODO add your handling code here:
        // change manage students icon to img05, others become img04, img08, img10 respectively
        // change bg color of panel to (67,67,67), text to (219,219,219) and panel of others to (35,35,35) and text of others to (112,110,110)
        manageStudentsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img05_manageStudents_selected.png")));
        manageStudentsPanel.setBackground(new java.awt.Color(67, 67, 67));
        manageStudentsText.setForeground(new java.awt.Color(219, 219, 219));

        dashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img04_dashboard_unselected.png")));
        dashboardPanel.setBackground(new java.awt.Color(35, 35, 35));
        dashboardText.setForeground(new java.awt.Color(112, 110, 110));

        manageTeachersIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img08_manageTeachers_unselected.png")));
        manageTeachersPanel.setBackground(new java.awt.Color(35, 35, 35));
        manageTeachersText.setForeground(new java.awt.Color(112, 110, 110));

        assignCoursesIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/img10_assignCourses_unselected.png")));
        assignCoursesPanel.setBackground(new java.awt.Color(35, 35, 35));
        assignCoursesText.setForeground(new java.awt.Color(112, 110, 110));
        
        // headertext changes tototalStudentsPanel Students
        headerText.setText("Manage Students");

        // switch to manage students panel
        jTabbedPane1.setSelectedIndex(1);
        
    }//GEN-LAST:event_manageStudentsPanelMouseReleased

    private void signOutPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signOutPanelMouseReleased
        // TODO add your handling code here:
        // current user = null, current course = null

        Manager manager = Manager.getInstance();
        
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_signOutPanelMouseReleased

    private void addAStudentButton_ManageStudentsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAStudentButton_ManageStudentsMouseReleased
        UpdateStudent updateStudent = new UpdateStudent();
        updateStudent.setVisible(true);
        updateManageStudentsTable();
    }//GEN-LAST:event_addAStudentButton_ManageStudentsMouseReleased

    private void editAStudentButton_ManageStudentsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editAStudentButton_ManageStudentsMouseReleased
        int selectedRow = manageStudentsTable.getSelectedRow();
        if (selectedRow != -1) {
            int studentId = (int) manageStudentsTable.getValueAt(selectedRow, 0);
            try {
                UserDAO userDAO = new UserDAO();
                User student = userDAO.findById(studentId);
                if (student != null) {
                    UpdateStudent updateStudent = new UpdateStudent(student);
                    updateStudent.setVisible(true);
                    updateManageStudentsTable(); // Refresh the table after updating
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Student not found.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error accessing database.", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a student to edit.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editAStudentButton_ManageStudentsMouseReleased

    private void removeAStudentButton_ManageStudentsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAStudentButton_ManageStudentsMouseReleased
        int selectedRow = manageStudentsTable.getSelectedRow();
        if (selectedRow != -1) {
            int studentId = (int) manageStudentsTable.getValueAt(selectedRow, 0);
            int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this student?", "Confirm Removal", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                removeStudent(studentId);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a student to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removeAStudentButton_ManageStudentsMouseReleased

    private void exportStudentDataAsCSVButton_ManageStudentsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportStudentDataAsCSVButton_ManageStudentsMouseReleased
        try {
            UserDAO userDAO = new UserDAO();
            ArrayList<User> students = userDAO.findAllStudents();
            ExportAsCSV exportAsCSV = new ExportAsCSV(students);
            exportAsCSV.setVisible(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error exporting data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_exportStudentDataAsCSVButton_ManageStudentsMouseReleased

    private void generateStudentReportButton_ManageStudentsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateStudentReportButton_ManageStudentsMouseReleased
        int selectedRow = manageStudentsTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a student to generate a report for.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int studentId = (int) manageStudentsTable.getValueAt(selectedRow, 0); // Get student ID from the first column
            UserDAO userDAO = new UserDAO();
            User student = userDAO.findById(studentId);

            if (student != null) {
                ExportAsTXT exportAsTXT = new ExportAsTXT(student);
                exportAsTXT.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Error: Student not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error generating report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: Invalid student ID.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }    
    }//GEN-LAST:event_generateStudentReportButton_ManageStudentsMouseReleased

    private void addATeacherButton_ManageTeacherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addATeacherButton_ManageTeacherMouseReleased
        // TODO add your handling code here:
        UpdateTeacher updateTeacher = new UpdateTeacher();
        updateTeacher.setVisible(true);
        updateManageTeachersTable();
    }//GEN-LAST:event_addATeacherButton_ManageTeacherMouseReleased

    private void exportTeacherDataAsCSVButton_ManageTeacherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportTeacherDataAsCSVButton_ManageTeacherMouseReleased
        try {
            UserDAO userDAO = new UserDAO();
            ArrayList<User> teachers = userDAO.findAllTeachers();
            ExportAsCSV exportAsCSV = new ExportAsCSV(teachers);
            exportAsCSV.setVisible(true);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error exporting data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_exportTeacherDataAsCSVButton_ManageTeacherMouseReleased

    private void generateTeacherReportButton_ManageTeacherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateTeacherReportButton_ManageTeacherMouseReleased
        int selectedRow = manageStudentsTable2.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a teacher to generate a report for.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int teacherId = (int) manageStudentsTable2.getValueAt(selectedRow, 0); // Get teacher ID from the first column
            UserDAO userDAO = new UserDAO();
            User teacher = userDAO.findById(teacherId);

            if (teacher != null) {
                ExportAsTXT exportAsTXT = new ExportAsTXT(teacher);
                exportAsTXT.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Error: Teacher not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error generating report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: Invalid teacher ID.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_generateTeacherReportButton_ManageTeacherMouseReleased

    private void editATeacherButton_ManageTeacherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editATeacherButton_ManageTeacherMouseReleased
        int selectedRow = manageStudentsTable2.getSelectedRow();
        if (selectedRow != -1) {
            int teacherId = (int) manageStudentsTable2.getValueAt(selectedRow, 0);
            try {
                UserDAO userDAO = new UserDAO();
                User teacher = userDAO.findById(teacherId);
                if (teacher != null) {
                    UpdateTeacher updateTeacher = new UpdateTeacher(teacher);
                    updateTeacher.setVisible(true);
                    updateManageTeachersTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Teacher not found.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error accessing database.", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a teacher to edit.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_editATeacherButton_ManageTeacherMouseReleased

    private void removeATeacherButton_ManageTeacherMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeATeacherButton_ManageTeacherMouseReleased
        int selectedRow = manageStudentsTable2.getSelectedRow();
        if (selectedRow != -1) {
            int teacherId = (int) manageStudentsTable2.getValueAt(selectedRow, 0);
            int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this teacher?", "Confirm Removal", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                removeTeacher(teacherId);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a teacher to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removeATeacherButton_ManageTeacherMouseReleased

    private void addACourseButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addACourseButtonMouseReleased
        UpdateCourse updateCourse = new UpdateCourse();
        updateCourse.setVisible(true);
        updateManageCoursesTable();
    }//GEN-LAST:event_addACourseButtonMouseReleased

    private void generateCourseReportButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateCourseReportButtonMouseReleased
        int selectedRow = manageCoursesTable.getSelectedRow();
        if (selectedRow != -1) {
            int courseId = (int) manageCoursesTable.getValueAt(selectedRow, 0);
            try {
                CourseDAO courseDAO = new CourseDAO();
                Course course = courseDAO.findById(courseId);
                if (course != null) {
                    ExportAsTXT exportAsTXT = new ExportAsTXT(course);
                    exportAsTXT.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Course not found.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error generating report: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a course to generate a report for.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generateCourseReportButtonMouseReleased

    private void editACourserButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editACourserButtonMouseReleased
        int selectedRow = manageCoursesTable.getSelectedRow();
        if (selectedRow != -1) {
            int courseId = (int) manageCoursesTable.getValueAt(selectedRow, 0);
            try {
                CourseDAO courseDAO = new CourseDAO();
                Course course = courseDAO.findById(courseId);
                if (course != null) {
                    UpdateCourse updateCourse = new UpdateCourse(course);
                    updateCourse.setVisible(true);
                    updateManageCoursesTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Course not found.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error accessing database.", "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a course to edit.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editACourserButtonMouseReleased

    private void removeACourseButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeACourseButtonMouseReleased
        int selectedRow = manageCoursesTable.getSelectedRow();
        if (selectedRow != -1) {
            int courseId = (int) manageCoursesTable.getValueAt(selectedRow, 0);
            int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this course?", "Confirm Removal", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                removeCourse(courseId);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a course to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_removeACourseButtonMouseReleased

    private void createAttendanceRateChart() {
        // 1. Get attendance data from the database
        Map<String, Double> attendanceRates = getAttendanceRatesByCourse();

        // 2. Create a dataset for the chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (Map.Entry<String, Double> entry : attendanceRates.entrySet()) {
            dataset.addValue(entry.getValue(), "Attendance Rate", entry.getKey());
        }

        // 3. Create the chart
        JFreeChart barChart = ChartFactory.createBarChart(
                "", // Chart title (empty because we have a header)
                "Course", // X-axis label
                "Attendance Rate (%)", // Y-axis label
                dataset, // Dataset
                PlotOrientation.VERTICAL, // Orientation
                false, // Show legend
                true, // Use tooltips
                false // Generate URLs
        );

        // 4. Customize the chart (optional)
        CategoryPlot plot = barChart.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(158, 194, 215)); // Set bar color
        plot.setBackgroundPaint(new Color(249, 249, 249)); // Set plot background color

        // 5. Create a chart panel and add it to the attendanceRatesChart panel
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new Dimension(attendanceRatesChart.getWidth(), attendanceRatesChart.getHeight()));
        chartPanel.setOpaque(false); // Make the chart panel transparent
        attendanceRatesChart.setLayout(new BorderLayout());
        attendanceRatesChart.add(chartPanel, BorderLayout.CENTER);
        attendanceRatesChart.validate();
    }

    private Map<String, Double> getAttendanceRatesByCourse() {
        // This method retrieves attendance rates for each course from the database.
        // Replace this with your actual database logic.
        // Example:
        StudentSessionDAO studentSessionDAO;
        try {
            studentSessionDAO = new StudentSessionDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        Map<String, Double> attendanceRates = studentSessionDAO.getAttendanceRatesForAllCourses();
        return attendanceRates;
    }

    private void createGradeDistributionChart() {
        // 1. Get grade distribution data from the database
        Map<Integer, Integer> gradeDistribution = getGradeDistribution();

        // 2. Create a dataset for the bar chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < 20; i++) {
            int lowerBound = i * 5;
            int upperBound = lowerBound + 4;
            String rangeLabel = String.format("%d-%d", lowerBound, upperBound);
            int count = gradeDistribution.getOrDefault(i, 0); // Get count for this range, default to 0
            dataset.addValue(count, "Number of Students", rangeLabel);
        }

        // 3. Create the bar chart
        JFreeChart barChart = ChartFactory.createBarChart(
                "", // Chart title (empty because we have a header)
                "Grade Range", // X-axis label
                "Number of Students", // Y-axis label
                dataset, // Dataset
                PlotOrientation.VERTICAL, // Orientation
                false, // Show legend
                true, // Use tooltips
                false // Generate URLs
        );

        // 4. Customize the chart (optional)
        CategoryPlot plot = barChart.getCategoryPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(158, 194, 215)); // Set bar color
        plot.setBackgroundPaint(new Color(249, 249, 249)); // Set plot background color

        // Customize the X-axis
        CategoryAxis xAxis = plot.getDomainAxis();
        xAxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45); // Rotate labels for better readability

        // Customize the Y-axis
        NumberAxis yAxis = (NumberAxis) plot.getRangeAxis();
        yAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); // Use integer tick units

        // 5. Create a chart panel and add it to the gradeDistributionChart panel
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new Dimension(gradeDistributionChart.getWidth(), gradeDistributionChart.getHeight()));
        chartPanel.setOpaque(false); // Make the chart panel transparent
        gradeDistributionChart.setLayout(new BorderLayout());
        gradeDistributionChart.add(chartPanel, BorderLayout.CENTER);
        gradeDistributionChart.validate();
    }

    private Map<Integer, Integer> getGradeDistribution() {
        // This method retrieves the grade distribution data from the database.
        TaskSubmissionDAO taskSubmissionDAO;
        try {
            taskSubmissionDAO = new TaskSubmissionDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return taskSubmissionDAO.getGradeDistributionByRange();
    }

    // update manage students table, action will be left blank first
    private void updateManageStudentsTable() {
        UserDAO userDAO;
        try {
            userDAO = new UserDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        ArrayList<User> students = userDAO.findAllStudents();

        DefaultTableModel model = (DefaultTableModel) manageStudentsTable.getModel();
        model.setRowCount(0); // Clear existing rows

        displayStudents(students);
    }

    private void updateManageTeachersTable() {
        UserDAO userDAO;
        try {
            userDAO = new UserDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        ArrayList<User> teachers = userDAO.findAllTeachers();

        DefaultTableModel model = (DefaultTableModel) manageStudentsTable2.getModel();
        model.setRowCount(0); // Clear existing rows

        displayTeachers(teachers);
    }

    private void updateManageCoursesTable() {
        CourseDAO courseDAO;
        TaskSubmissionDAO taskSubmissionDAO;
        StudentSessionDAO studentSessionDAO;
        try {
            courseDAO = new CourseDAO();
            taskSubmissionDAO = new TaskSubmissionDAO();
            studentSessionDAO = new StudentSessionDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }

        DefaultTableModel model = (DefaultTableModel) manageCoursesTable.getModel();
        model.setRowCount(0); // Clear existing rows

        ArrayList<Course> courses = courseDAO.findAll();
        for (Course course : courses) {
            ArrayList<User> teachers = courseDAO.findTeachersByCourseId(course.getCourseId());
            String teachersString = formatTeacherList(teachers);
            int studentCount = courseDAO.countStudentsByCourseId(course.getCourseId());
            String roomsString = formatRoomList(course.getCourseId());
            double averageGrade = taskSubmissionDAO.getAverageGradeForCourse(course.getCourseId());
            double attendanceRate = studentSessionDAO.getAttendanceRateForCourse(course.getCourseId()) * 100;

            Object[] row = {
                    course.getCourseId(),
                    course.getCourseCode(),
                    course.getCourseTitle(),
                    teachersString,
                    studentCount,
                    roomsString,
                    String.format("%.2f", averageGrade),
                    String.format("%.1f%%", attendanceRate)
            };
            model.addRow(row);
        }
    }

    private void displayStudents(ArrayList<User> students) {
        DefaultTableModel model = (DefaultTableModel) manageStudentsTable.getModel();
        CourseDAO courseDAO;
        try {
            courseDAO = new CourseDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        for (User student : students) {
            // Get the courses for the current student
            ArrayList<Course> studentCourses = courseDAO.findCoursesByStudentId(student.getUserID());

            // Format the course information for display
            StringBuilder classesBuilder = new StringBuilder();
            for (Course course : studentCourses) {
                classesBuilder.append(course.getCourseCode()).append(", ");
            }
            // Remove the trailing comma and space if there are courses
            if (classesBuilder.length() > 2) {
                classesBuilder.delete(classesBuilder.length() - 2, classesBuilder.length());
            }
            String classes = classesBuilder.toString();

            Object[] row = {
                    student.getUserID(),
                    student.getName(),
                    classes, // Now display the formatted classes
                    student.getBirthdate(),
                    student.getGender(),
                    student.getEmail(),
                    "" // Actions (initially empty)
            };
            model.addRow(row);
        }
    }

    private String formatRoomList(int courseId) {
        CourseDAO courseDAO;
        try {
            courseDAO = new CourseDAO();
        } catch (SQLException e) {
            return "Error";
        }
        ArrayList<String> rooms = courseDAO.getRoomsByCourseId(courseId);
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < rooms.size(); i++) {
            sb.append(rooms.get(i));
            if (i < rooms.size() - 1) {
                sb.append(", ");
            }
        }
        return sb.toString();
    }

    // Helper method to format the list of teachers (same as in TeacherDashboard)
    private String formatTeacherList(ArrayList<User> teachers) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < teachers.size(); i++) {
            sb.append(teachers.get(i).getName());
            if (i < teachers.size() - 1) {
                sb.append(", ");
            }
        }
        return sb.toString();
    }

    private void displayTeachers(ArrayList<User> teachers) {
        DefaultTableModel model = (DefaultTableModel) manageStudentsTable2.getModel();
        CourseDAO courseDAO;
        try {
            courseDAO = new CourseDAO();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        for (User teacher : teachers) {
            // Get the courses for the current teacher
            ArrayList<Course> teacherCourses = courseDAO.getCoursesByTeacherId(teacher.getUserID());

            // Format the course information for display
            StringBuilder classesBuilder = new StringBuilder();
            for (Course course : teacherCourses) {
                classesBuilder.append(course.getCourseCode()).append(", ");
            }
            // Remove the trailing comma and space if there are courses
            if (classesBuilder.length() > 2) {
                classesBuilder.delete(classesBuilder.length() - 2, classesBuilder.length());
            }
            String classes = classesBuilder.toString();

            Object[] row = {
                    teacher.getUserID(),
                    teacher.getName(),
                    teacher.getDepartment(),
                    classes, // Now display the formatted classes
                    teacher.getBirthdate(),
                    teacher.getGender(),
                    teacher.getEmail()
            };
            model.addRow(row);
        }
    }

    private void removeStudent(int studentId) {
        try {
            UserDAO userDAO = new UserDAO();
            userDAO.delete(studentId);
            updateManageStudentsTable(); // Refresh the table after removing
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error removing student.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void removeTeacher(int teacherId) {
        try {
            UserDAO userDAO = new UserDAO();
            userDAO.delete(teacherId);
            updateManageTeachersTable(); // Refresh the table after removing
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error removing teacher.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void removeCourse(int courseId) {
        try {
            CourseDAO courseDAO = new CourseDAO();
            courseDAO.delete(courseId);
            updateManageCoursesTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error removing course.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CampusMateLogo;
    private javax.swing.JPanel addACourseButton;
    private javax.swing.JLabel addACourseText;
    private javax.swing.JPanel addAStudentButton_ManageStudents;
    private javax.swing.JLabel addAStudentText_ManageStudents;
    private javax.swing.JPanel addATeacherButton_ManageTeacher;
    private javax.swing.JLabel addATeacherText_ManageTeacher;
    private javax.swing.JPanel assignCourses;
    private javax.swing.JLabel assignCoursesIcon;
    private javax.swing.JPanel assignCoursesPanel;
    private javax.swing.JLabel assignCoursesText;
    private javax.swing.JPanel attendanceRatesChart;
    private javax.swing.JLabel attendanceRatesChartHeader;
    private javax.swing.JPanel attendanceRatesChartPanel;
    private javax.swing.JLabel attendanceRatesCount;
    private javax.swing.JLabel attendanceRatesHeader;
    private javax.swing.JPanel attendanceRatesPanel;
    private javax.swing.JLabel dashboardIcon;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JPanel dashboardTab;
    private javax.swing.JLabel dashboardText;
    private javax.swing.JLabel editACourseText;
    private javax.swing.JPanel editACourserButton;
    private javax.swing.JPanel editAStudentButton_ManageStudents;
    private javax.swing.JLabel editAStudentText_ManageStudents;
    private javax.swing.JPanel editATeacherButton_ManageTeacher;
    private javax.swing.JLabel editATeacherText_ManageTeacher;
    private javax.swing.JPanel exportStudentDataAsCSVButton_ManageStudents;
    private javax.swing.JLabel exportStudentDataAsCSVText_ManageStudents;
    private javax.swing.JPanel exportTeacherDataAsCSVButton_ManageTeacher;
    private javax.swing.JLabel exportTeacherDataAsCSVText_ManageTeacher;
    private javax.swing.JLabel fullnameText;
    private javax.swing.JPanel generateCourseReportButton;
    private javax.swing.JLabel generateCourseReportText;
    private javax.swing.JPanel generateStudentReportButton_ManageStudents;
    private javax.swing.JLabel generateStudentReportText_ManageStudents;
    private javax.swing.JPanel generateTeacherReportButton_ManageTeacher;
    private javax.swing.JLabel generateTeacherReportText_ManageTeacher;
    private javax.swing.JPanel gradeDistributionChart;
    private javax.swing.JLabel gradeDistributionChartHeader;
    private javax.swing.JPanel gradeDistributionChartPanel;
    private javax.swing.JPanel headerDivider;
    private javax.swing.JPanel headerPanel1;
    private javax.swing.JLabel headerText;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable manageCoursesTable;
    private javax.swing.JLabel manageStudentsIcon;
    private javax.swing.JPanel manageStudentsPanel;
    private javax.swing.JPanel manageStudentsTab;
    private javax.swing.JTable manageStudentsTable;
    private javax.swing.JTable manageStudentsTable2;
    private javax.swing.JLabel manageStudentsText;
    private javax.swing.JLabel manageTeachersIcon;
    private javax.swing.JPanel manageTeachersPanel;
    private javax.swing.JPanel manageTeachersTab;
    private javax.swing.JLabel manageTeachersText;
    private javax.swing.JPanel removeACourseButton;
    private javax.swing.JLabel removeACourseText;
    private javax.swing.JPanel removeAStudentButton_ManageStudents;
    private javax.swing.JLabel removeAStudentText_ManageStudents;
    private javax.swing.JPanel removeATeacherButton_ManageTeacher;
    private javax.swing.JLabel removeATeacherText_ManageTeacher;
    private javax.swing.JPanel signOutPanel;
    private javax.swing.JLabel totalStudentsCount;
    private javax.swing.JLabel totalStudentsHeader;
    private javax.swing.JPanel totalStudentsPanel;
    private javax.swing.JLabel totalTeachersCount;
    private javax.swing.JLabel totalTeachersHeader;
    private javax.swing.JPanel totalTeachersPanel;
    // End of variables declaration//GEN-END:variables
}
